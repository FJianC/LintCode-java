public class Solution {
    public String addBinary(String a, String b) {
        int aL = a.length() - 1;                                    //字符变量 a 的长度
        int bL = b.length() - 1;                                    //字符变量 b 的长度
        String result = "";                                         //字符变量 result 为空
        int sum = 0;                                                //变量 sum 为判断是否需要进位
        while (aL >= 0 || bL >= 0) {                                //从字符串右边开始
            if (aL >= 0) {                                          // substring() 为获取字符串中的子字符串（不包括aL+1）
                sum += Integer.parseInt(a.substring(aL, aL + 1));   // Integer.parseInt() 为将字符串转化为整数
                aL--;
            }
            if (bL >= 0) {                                          // sum 为对应位上的数之和
                sum += Integer.parseInt(b.substring(bL, bL + 1));
                bL--;
            }
            if (sum == 2) {                                         //若 sum = 2 即二进制需要进位
                result = "0" + result;                              //进位后为 0 放入 result
                sum = 1;                                            //下一位要加 1
            } else if (sum == 0 || sum == 1) {                      //若 sum 不需进位
                result = sum + "" + result;                         //将 sum 直接放入 result
                sum = 0;                                            //变量 sum 归零
            } else if (sum == 3) {                                  //若对应位相加等于 2 ，上一位需要进位，则 sum = 3
                result = "1" + result;                              //因等于 2 时进位当前位应放 0 ，但上一位也进位，即当前为 0 + 1 = 1；
                sum = 1;                                            //进位
            }
        }
        if (sum == 1) {                                             //最后判断最左边对应位是否需要进位
            result = "1" + result;                                  //需进位则最前加 1
        }
        return result;
    }
};
