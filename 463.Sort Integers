//选择排序
public class Solution {

    public void sortIntegers(int[] A) {

        for (int i = 0; i < A.length - 1; i++) {
            int k = i;
            
            for (int j = i + 1; j < A.length; j++) {
                if (A[j] < A[k]) {
                    k = j;
                }
            }
            
            int temp = A[i];
            A[i] = A[k];
            A[k] = temp;
            
        }
    }
}

//选择排序（找出最大值和最小值）
public class Solution {

    public void sortIntegers(int[] A) {

        for (int i = 0; i < A.length / 2; i++) {
        
            int min = i;
            int max = A.length - 1 - i;
            //找出最小值的位置
            for (int j = i + 1; j < A.length - i; j++) {
                if (A[j] < A[min]) {
                    min = j;
                }
            }
            int temp = A[i];
            A[i] = A[min];
            A[min] = temp;
            //找出最大值的位置
            for (int j = i + 1; j < A.length - i; j++) {
                if (A[j] > A[max]) {
                    max = j;
                }
            }
            temp = A[A.length - 1 - i];
            A[A.length - 1 - i] = A[max];
            A[max] = temp;
            
        }
    }
}

//自写的冒泡排序
public class Solution {

    public void sortIntegers(int[] A) {

        for (int i = 0; i < A.length - 1; i++) {
        
            for (int j = i; j < A.length; j++) {
                if (A[i] > A[j]) {
                    int temp = A[i];
                    A[i] = A[j];
                    A[j] = temp;
                }
            }
            
        }
    }
}

//冒泡排序
public class Solution {

    public void sortIntegers(int[] A) {

        for (int i = 0; i < A.length - 1; i++) {
        
            for (int j = 0; j < A.length - 1 - i; j++) {
                if (A[j] > A[j + 1]) {
                    int temp = A[j];
                    A[j] = A[j + 1];
                    A[j + 1] = temp;
                }
            }
            
        }
    }
}
