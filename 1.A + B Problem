public class Solution {
    public int aplusb(int a, int b) {
        int i = a ^ b;                      //变量 a 异或 b （相加） 
        int j = a & b;                      //判断是否有进位
        while (j != 0) {                    //循环直到不需进位
            int ki = i;
            int kj = j << 1;
            i = ki ^ kj;
            j = ki & kj;
        }
        return i;
    }
};

按位异或 ^ 相同为 0 不同为 1
按位与   & 有 0 即 0
按位或   | 有 1 即 1
设：
十进制 a = 5, b = 6;
即二进制 a = 101, b = 110；
a ^ b 即 101 ^ 110 = 011；
a & b 即 101 & 110 = 100；
a & b 不等于 0 即 需要进位
a & b 向左移 1 => 1000
1000 ^ 011 = 1011 (位运算是从右向左算的)
1000 & 011 = 0000 等于 0 即 不需进位
结束
