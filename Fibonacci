//数组
public class Solution {
    /*
     * @param : an integer
     * @return: an ineger f(n)
     */
    public int fibonacci(int n) {
        // write your code here
        int[] f = new int[n + 1];
        f[0] = 0;
        f[1] = 1;
        if (n > 2) {
            for (int i = 2; i < n; i++) {
                f[i] = f[i-1] + f[i-2];
            }
        }
        return f[n - 1];
    }
}

//常规
public class Solution {
    /*
     * @param : an integer
     * @return: an ineger f(n)
     */
    public int fibonacci(int n) {
        // write your code here
        if (n == 1) {
            return 0;
        } else if (n == 2) {
            return 1;
        } else {
            int result = 0;
            int one = 0;
            int two = 1;
            for (int i = 2; i < n; i++) {
                result = one + two;
                one = two;
                two = result;
            }
            return result;
        }
    }
}

//递归
public class Solution {
    /*
     * @param : an integer
     * @return: an ineger f(n)
     */
    public int fibonacci(int n) {
        // write your code here
        if (n == 1) {
            return 0;
        } else if (n == 2) {
            return 1;
        } else {
            return fibonacci(n - 1) + fibonacci(n - 2);
        }
    }
}
